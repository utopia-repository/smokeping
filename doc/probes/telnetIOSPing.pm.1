.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "probes::telnetIOSPing 3"
.TH probes::telnetIOSPing 3 "2005-01-04" "1.35pre1" "SmokePing"
.SH "NAME"
probes::telnetIOSPing \- Cisco IOS Probe for SmokePing
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\& *** Probes ***
\& + telnetIOSPing
\& packetsize = 56
\& forks = 1
.Ve
.PP
.Vb 6
\& ++ PROBE_CONF
\& iospass = password
\& iosuser = user
\& target = 192.168.1.1
\& source = 192.168.2.1
\& psource = 192.168.2.129
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Integrates Cisco \s-1IOS\s0 as a probe into smokeping.  Uses the telnet protocol 
to run a ping from an \s-1IOS\s0 device (source) to another device (target).
This probe basically uses the \*(L"extended ping\*(R" of the Cisco \s-1IOS\s0.  You have
the option to specify which interface the ping is sourced from as well.
.SH "OPTIONS"
.IX Header "OPTIONS"
The iosuser, iospass, source, and target options are mandatory.
.PP
The (optional) packetsize option lets you configure the packetsize for
the pings sent.  The default size is 56.
.PP
The (optional) forks options lets you configure the number of
simultaneous remote pings to be run.  \s-1NB\s0 Some \s-1IOS\s0 devices have a
maximum of 5 VTYs available, so be careful not to hit a limit.
.PP
The source option specifies the \s-1IOS\s0 device to which we telnet.  This
is an \s-1IP\s0 address of an \s-1IOS\s0 Device that you/your server:
	1)  Have the ability to telnet to
	2)  Have a valid username and password for
.PP
The target option specifies the device you wish to ping from your \s-1IOS\s0
Device.
.PP
The (optional) psource option specifies an alternate \s-1IP\s0 address or
Interface from which you wish to source your pings from.  Routers
can have many many \s-1IP\s0 addresses, and interfaces.  When you ping from a
router you have the ability to choose which interface and/or which \s-1IP\s0
address the ping is sourced from.  Specifying an IP/interface does not 
necessarily specify the interface from which the ping will leave, but
will specify which address the packet(s) appear to come from.  If this
option is left out the \s-1IOS\s0 Device will source the packet automatically
based on routing and/or metrics.  If this doesn't make sense to you
then just leave it out.
.PP
The iosuser option allows you to specify a username that has ping
capability on the \s-1IOS\s0 Device.
.PP
The iospass option allows you to specify the password for the username
specified with the option iosuser.
.SH "IOS CONFIGURATION"
.IX Header "IOS CONFIGURATION"
The \s-1IOS\s0 device should have a username/password configured, as well as
the ability to connect to the \s-1VTY\s0(s).
eg:
.PP
.Vb 7
\&    !
\&    username smokeping privilege 5 password 0 SmokepingPassword
\&    !
\&    line vty 0 4
\&     login local
\&     transport input telnet
\&    !
.Ve
.SH "NOTES"
.IX Header "NOTES"
.Sh "Requirements"
.IX Subsection "Requirements"
This module requires the Net::Telnet module for perl.  This is usually
included on most newer OSs which include perl.
.Sh "Debugging"
.IX Subsection "Debugging"
There is some \s-1VERY\s0 rudimentary debugging code built into this module (it's
based on the debugging code written into Net::Telnet).  It will log
information into three files \*(L"TIPreturn\*(R", \*(L"TIPoutlog\*(R", and \*(L"TIPdump\*(R".
These files will be written out into your current working directory (\s-1CWD\s0).
You can change the names of these files to something with more meaning to
you.
.Sh "Password authentication"
.IX Subsection "Password authentication"
You should be advised that the authentication method of telnet uses
clear text transmissions...meaning that without proper network security
measures someone could sniff your username and password off the network.
I may attempt to incorporate \s-1SSH\s0 in a future version of this module, but
it is very doubtful.  Right now \s-1SSH\s0 adds a \s-1LOT\s0 of processing overhead to
a router, and isn't incredibly easy to implement in perl.
.PP
Having said this, don't be too scared of telnet.  Remember, the
original IOSPing module used \s-1RSH\s0, which is even more scary to use from
a security perspective.
.Sh "Ping packet size"
.IX Subsection "Ping packet size"
The FPing manpage has the following to say on the topic of ping packet
size:
.PP
Number of bytes of ping data to send.  The minimum size (normally 12)
allows room for the data that fping needs to do its work (sequence
number, timestamp).  The reported received data size includes the \s-1IP\s0
header (normally 20 bytes) and \s-1ICMP\s0 header (8 bytes), so the minimum
total size is 40 bytes.  Default is 56, as in ping. Maximum is the
theoretical maximum \s-1IP\s0 datagram size (64K), though most systems limit
this to a smaller, system-dependent number.
.SH "AUTHOR"
.IX Header "AUTHOR"
John A Jackson <geonjay@infoave.net>
.PP
based \s-1HEAVILY\s0 on probes::IOSPing by
.PP
Paul J Murphy <paul@murph.org>
.PP
based on probes::FPing by
.PP
Tobias Oetiker <tobi@oetiker.ch>
