doc::Smokeping::probes::TelnetJunOSPSimdnoogkc(e:3P:)iSnmgokeping::probes::TelnetJunOSPing(3)



NNAAMMEE
       Smokeping::probes::TelnetJunOSPing - Juniper JunOS Probe for SmokePing

SSYYNNOOPPSSIISS
        *** Probes ***

        +TelnetJunOSPing

        forks = 5
        offset = 50%
        packetsize = 100
        step = 300
        timeout = 15

        # The following variables can be overridden in each target section
        junospass = password # mandatory
        junosuser = user # mandatory
        pings = 5
        psource = 192.168.2.129
        source = 192.168.2.1 # mandatory

        # [...]

        *** Targets ***

        probe = TelnetJunOSPing # if this should be the default probe

        # [...]

        + mytarget
        # probe = TelnetJunOSPing # if the default probe is something else
        host = my.host
        junospass = password # mandatory
        junosuser = user # mandatory
        pings = 5
        psource = 192.168.2.129
        source = 192.168.2.1 # mandatory

DDEESSCCRRIIPPTTIIOONN
       Integrates Juniper JunOS as a probe into smokeping.  Uses the telnet
       protocol to run a ping from an JunOS device (source) to another device
       (host).  This probe basically uses the "extended ping" of the Juniper
       JunOS.  You have the option to specify which interface the ping is
       sourced from as well.

VVAARRIIAABBLLEESS
       Supported probe-specific variables:

       forks
           Run this many concurrent processes at maximum

           Example value: 5

           Default value: 5

       offset
           If you run many probes concurrently you may want to prevent them
           from hitting your network all at the same time. Using the probe-
           specific offset parameter you can change the point in time when
           each probe will be run. Offset is specified in % of total interval,
           or alternatively as 'random', and the offset from the 'General'
           section is used if nothing is specified here. Note that this does
           NOT influence the rrds itself, it is just a matter of when data
           acqusition is initiated.  (This variable is only applicable if the
           variable 'concurrentprobes' is set in the 'General' section.)

           Example value: 50%

       packetsize
           The (optional) packetsize option lets you configure the packetsize
           for the pings sent.

           Default value: 100

       step
           Duration of the base interval that this probe should use, if dif-
           ferent from the one specified in the 'Database' section. Note that
           the step in the RRD files is fixed when they are originally gener-
           ated, and if you change the step parameter afterwards, you'll have
           to delete the old RRD files or somehow convert them. (This variable
           is only applicable if the variable 'concurrentprobes' is set in the
           'General' section.)

           Example value: 300

       timeout
           How long a single 'ping' takes at maximum

           Example value: 15

           Default value: 5

       Supported target-specific variables:

       junospass
           The junospass option allows you to specify the password for the
           username specified with the option junosuser.

           Example value: password

           This setting is mandatory.

       junosuser
           The junosuser option allows you to specify a username that has ping
           capability on the JunOS Device.

           Example value: user

           This setting is mandatory.

       pings
           How many pings should be sent to each target, if different from the
           global value specified in the Database section. Note that the num-
           ber of pings in the RRD files is fixed when they are originally
           generated, and if you change this parameter afterwards, you'll have
           to delete the old RRD files or somehow convert them.

           Example value: 5

       psource
           The (optional) psource option specifies an alternate IP address or
           Interface from which you wish to source your pings from.  Routers
           can have many many IP addresses, and interfaces.  When you ping
           from a router you have the ability to choose which interface and/or
           which IP address the ping is sourced from.  Specifying an IP/inter-
           face does not necessarily specify the interface from which the ping
           will leave, but will specify which address the packet(s) appear to
           come from.  If this option is left out the JunOS Device will source
           the packet automatically based on routing and/or metrics.  If this
           doesn't make sense to you then just leave it out.

           Example value: 192.168.2.129

       source
           The source option specifies the JunOS device to which we telnet.
           This is an IP address of an JunOS Device that you/your server:
                1)  Have the ability to telnet to      2)  Have a valid user-
           name and password for

           Example value: 192.168.2.1

           This setting is mandatory.

AAUUTTHHOORRSS
       S H A N <shanali@yahoo.com>

       based HEAVILY on Smokeping::probes::TelnetIOSPing by

       John A Jackson <geonjay@infoave.net>

       based on Smokeping::probes::JunOSPing by

       Paul J Murphy <paul@murph.org>

       based on Smokeping::probes::FPing by

       Tobias Oetiker <tobi@oetiker.ch>

NNOOTTEESS
       JJuunnOOSS ccoonnffiigguurraattiioonn

       The JunOS device should have a username/password configured, as well as
       the ability to connect to the VTY(s).

       Some JunOS devices have a maximum of 5 VTYs available, so be careful
       not to hit a limit with the 'forks' variable.

       RReeqquuiirreemmeennttss

       This module requires the Net::Telnet module for perl.  This is usually
       included on most newer OSs which include perl.

       DDeebbuuggggiinngg

       There is some VERY rudimentary debugging code built into this module
       (it's based on the debugging code written into Net::Telnet).  It will
       log information into three files "TIPreturn", "TIPoutlog", and "TIP-
       dump".  These files will be written out into your current working
       directory (CWD).  You can change the names of these files to something
       with more meaning to you.

       PPaasssswwoorrdd aauutthheennttiiccaattiioonn

       You should be advised that the authentication method of telnet uses
       clear text transmissions...meaning that without proper network security
       measures someone could sniff your username and password off the net-
       work.  I may attempt to incorporate SSH in a future version of this
       module, but it is very doubtful.  Right now SSH adds a LOT of process-
       ing overhead to a router, and isn't incredibly easy to implement in
       perl.

       Having said this, don't be too scared of telnet.  Remember, the origi-
       nal JunOSPing module used RSH, which is even more scary to use from a
       security perspective.

       PPiinngg ppaacckkeett ssiizzee

       The FPing manpage has the following to say on the topic of ping packet
       size:

       Number of bytes of ping data to send.  The minimum size (normally 12)
       allows room for the data that fping needs to do its work (sequence num-
       ber, timestamp).  The reported received data size includes the IP
       header (normally 20 bytes) and ICMP header (8 bytes), so the minimum
       total size is 40 bytes.  Default is 56, as in ping. Maximum is the the-
       oretical maximum IP datagram size (64K), though most systems limit this
       to a smaller, system-dependent number.



2.3.0                             200d8o-c0:1:-S2m3okeping::probes::TelnetJunOSPing(3)
